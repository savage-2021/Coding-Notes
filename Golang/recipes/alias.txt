-='cd -'
...=../..
....=../../..
.....=../../../..
......=../../../../..
1='cd -'
2='cd -2'
3='cd -3'
4='cd -4'
5='cd -5'
6='cd -6'
7='cd -7'
8='cd -8'
9='cd -9'
_='sudo '
_complete=_bash_comp
_expand=_bash_expand
a2t='sudo cp /tmp/Archive.zip /home/cxcadmin-sftp/data'
a2tl='sudo cp /opt/cisco/iris/Archive.zip /home/cxcadmin-sftp/data'
activate-env='source /opt/cisco/env/iris/bin/activate'
afind='ack -il'
apps='/opt/cisco/iris/deploy/install.sh apps'
base16_3024='_base16 "/home/cxcadmin/.config/base16-shell/scripts/base16-3024.sh" 3024'
base16_apathy='_base16 "/home/cxcadmin/.config/base16-shell/scripts/base16-apathy.sh" apathy'
base16_ashes='_base16 "/home/cxcadmin/.config/base16-shell/scripts/base16-ashes.sh" ashes'
base16_atelier-cave='_base16 "/home/cxcadmin/.config/base16-shell/scripts/base16-atelier-cave.sh" atelier-cave'
base16_atelier-cave-light='_base16 "/home/cxcadmin/.config/base16-shell/scripts/base16-atelier-cave-light.sh" atelier-cave-light'
base16_atelier-dune='_base16 "/home/cxcadmin/.config/base16-shell/scripts/base16-atelier-dune.sh" atelier-dune'
base16_atelier-dune-light='_base16 "/home/cxcadmin/.config/base16-shell/scripts/base16-atelier-dune-light.sh" atelier-dune-light'
base16_atelier-estuary='_base16 "/home/cxcadmin/.config/base16-shell/scripts/base16-atelier-estuary.sh" atelier-estuary'
base16_atelier-estuary-light='_base16 "/home/cxcadmin/.config/base16-shell/scripts/base16-atelier-estuary-light.sh" atelier-estuary-light'
base16_atelier-forest='_base16 "/home/cxcadmin/.config/base16-shell/scripts/base16-atelier-forest.sh" atelier-forest'
base16_atelier-forest-light='_base16 "/home/cxcadmin/.config/base16-shell/scripts/base16-atelier-forest-light.sh" atelier-forest-light'
base16_atelier-heath='_base16 "/home/cxcadmin/.config/base16-shell/scripts/base16-atelier-heath.sh" atelier-heath'
base16_atelier-heath-light='_base16 "/home/cxcadmin/.config/base16-shell/scripts/base16-atelier-heath-light.sh" atelier-heath-light'
base16_atelier-lakeside='_base16 "/home/cxcadmin/.config/base16-shell/scripts/base16-atelier-lakeside.sh" atelier-lakeside'
base16_atelier-lakeside-light='_base16 "/home/cxcadmin/.config/base16-shell/scripts/base16-atelier-lakeside-light.sh" atelier-lakeside-light'
base16_atelier-plateau='_base16 "/home/cxcadmin/.config/base16-shell/scripts/base16-atelier-plateau.sh" atelier-plateau'
base16_atelier-plateau-light='_base16 "/home/cxcadmin/.config/base16-shell/scripts/base16-atelier-plateau-light.sh" atelier-plateau-light'
base16_atelier-savanna='_base16 "/home/cxcadmin/.config/base16-shell/scripts/base16-atelier-savanna.sh" atelier-savanna'
base16_atelier-savanna-light='_base16 "/home/cxcadmin/.config/base16-shell/scripts/base16-atelier-savanna-light.sh" atelier-savanna-light'
base16_atelier-seaside='_base16 "/home/cxcadmin/.config/base16-shell/scripts/base16-atelier-seaside.sh" atelier-seaside'
base16_atelier-seaside-light='_base16 "/home/cxcadmin/.config/base16-shell/scripts/base16-atelier-seaside-light.sh" atelier-seaside-light'
base16_atelier-sulphurpool='_base16 "/home/cxcadmin/.config/base16-shell/scripts/base16-atelier-sulphurpool.sh" atelier-sulphurpool'
base16_atelier-sulphurpool-light='_base16 "/home/cxcadmin/.config/base16-shell/scripts/base16-atelier-sulphurpool-light.sh" atelier-sulphurpool-light'
base16_atlas='_base16 "/home/cxcadmin/.config/base16-shell/scripts/base16-atlas.sh" atlas'
base16_bespin='_base16 "/home/cxcadmin/.config/base16-shell/scripts/base16-bespin.sh" bespin'
base16_black-metal='_base16 "/home/cxcadmin/.config/base16-shell/scripts/base16-black-metal.sh" black-metal'
base16_black-metal-bathory='_base16 "/home/cxcadmin/.config/base16-shell/scripts/base16-black-metal-bathory.sh" black-metal-bathory'
base16_black-metal-burzum='_base16 "/home/cxcadmin/.config/base16-shell/scripts/base16-black-metal-burzum.sh" black-metal-burzum'
base16_black-metal-dark-funeral='_base16 "/home/cxcadmin/.config/base16-shell/scripts/base16-black-metal-dark-funeral.sh" black-metal-dark-funeral'
base16_black-metal-gorgoroth='_base16 "/home/cxcadmin/.config/base16-shell/scripts/base16-black-metal-gorgoroth.sh" black-metal-gorgoroth'
base16_black-metal-immortal='_base16 "/home/cxcadmin/.config/base16-shell/scripts/base16-black-metal-immortal.sh" black-metal-immortal'
base16_black-metal-khold='_base16 "/home/cxcadmin/.config/base16-shell/scripts/base16-black-metal-khold.sh" black-metal-khold'
base16_black-metal-marduk='_base16 "/home/cxcadmin/.config/base16-shell/scripts/base16-black-metal-marduk.sh" black-metal-marduk'
base16_black-metal-mayhem='_base16 "/home/cxcadmin/.config/base16-shell/scripts/base16-black-metal-mayhem.sh" black-metal-mayhem'
base16_black-metal-nile='_base16 "/home/cxcadmin/.config/base16-shell/scripts/base16-black-metal-nile.sh" black-metal-nile'
base16_black-metal-venom='_base16 "/home/cxcadmin/.config/base16-shell/scripts/base16-black-metal-venom.sh" black-metal-venom'
base16_brewer='_base16 "/home/cxcadmin/.config/base16-shell/scripts/base16-brewer.sh" brewer'
base16_bright='_base16 "/home/cxcadmin/.config/base16-shell/scripts/base16-bright.sh" bright'
base16_brogrammer='_base16 "/home/cxcadmin/.config/base16-shell/scripts/base16-brogrammer.sh" brogrammer'
base16_brushtrees='_base16 "/home/cxcadmin/.config/base16-shell/scripts/base16-brushtrees.sh" brushtrees'
base16_brushtrees-dark='_base16 "/home/cxcadmin/.config/base16-shell/scripts/base16-brushtrees-dark.sh" brushtrees-dark'
base16_chalk='_base16 "/home/cxcadmin/.config/base16-shell/scripts/base16-chalk.sh" chalk'
base16_circus='_base16 "/home/cxcadmin/.config/base16-shell/scripts/base16-circus.sh" circus'
base16_classic-dark='_base16 "/home/cxcadmin/.config/base16-shell/scripts/base16-classic-dark.sh" classic-dark'
base16_classic-light='_base16 "/home/cxcadmin/.config/base16-shell/scripts/base16-classic-light.sh" classic-light'
base16_codeschool='_base16 "/home/cxcadmin/.config/base16-shell/scripts/base16-codeschool.sh" codeschool'
base16_cupcake='_base16 "/home/cxcadmin/.config/base16-shell/scripts/base16-cupcake.sh" cupcake'
base16_cupertino='_base16 "/home/cxcadmin/.config/base16-shell/scripts/base16-cupertino.sh" cupertino'
base16_darktooth='_base16 "/home/cxcadmin/.config/base16-shell/scripts/base16-darktooth.sh" darktooth'
base16_default-dark='_base16 "/home/cxcadmin/.config/base16-shell/scripts/base16-default-dark.sh" default-dark'
base16_default-light='_base16 "/home/cxcadmin/.config/base16-shell/scripts/base16-default-light.sh" default-light'
base16_dracula='_base16 "/home/cxcadmin/.config/base16-shell/scripts/base16-dracula.sh" dracula'
base16_eighties='_base16 "/home/cxcadmin/.config/base16-shell/scripts/base16-eighties.sh" eighties'
base16_embers='_base16 "/home/cxcadmin/.config/base16-shell/scripts/base16-embers.sh" embers'
base16_flat='_base16 "/home/cxcadmin/.config/base16-shell/scripts/base16-flat.sh" flat'
base16_fruit-soda='_base16 "/home/cxcadmin/.config/base16-shell/scripts/base16-fruit-soda.sh" fruit-soda'
base16_github='_base16 "/home/cxcadmin/.config/base16-shell/scripts/base16-github.sh" github'
base16_google-dark='_base16 "/home/cxcadmin/.config/base16-shell/scripts/base16-google-dark.sh" google-dark'
base16_google-light='_base16 "/home/cxcadmin/.config/base16-shell/scripts/base16-google-light.sh" google-light'
base16_grayscale-dark='_base16 "/home/cxcadmin/.config/base16-shell/scripts/base16-grayscale-dark.sh" grayscale-dark'
base16_grayscale-light='_base16 "/home/cxcadmin/.config/base16-shell/scripts/base16-grayscale-light.sh" grayscale-light'
base16_greenscreen='_base16 "/home/cxcadmin/.config/base16-shell/scripts/base16-greenscreen.sh" greenscreen'
base16_gruvbox-dark-hard='_base16 "/home/cxcadmin/.config/base16-shell/scripts/base16-gruvbox-dark-hard.sh" gruvbox-dark-hard'
base16_gruvbox-dark-medium='_base16 "/home/cxcadmin/.config/base16-shell/scripts/base16-gruvbox-dark-medium.sh" gruvbox-dark-medium'
base16_gruvbox-dark-pale='_base16 "/home/cxcadmin/.config/base16-shell/scripts/base16-gruvbox-dark-pale.sh" gruvbox-dark-pale'
base16_gruvbox-dark-soft='_base16 "/home/cxcadmin/.config/base16-shell/scripts/base16-gruvbox-dark-soft.sh" gruvbox-dark-soft'
base16_gruvbox-light-hard='_base16 "/home/cxcadmin/.config/base16-shell/scripts/base16-gruvbox-light-hard.sh" gruvbox-light-hard'
base16_gruvbox-light-medium='_base16 "/home/cxcadmin/.config/base16-shell/scripts/base16-gruvbox-light-medium.sh" gruvbox-light-medium'
base16_gruvbox-light-soft='_base16 "/home/cxcadmin/.config/base16-shell/scripts/base16-gruvbox-light-soft.sh" gruvbox-light-soft'
base16_harmonic-dark='_base16 "/home/cxcadmin/.config/base16-shell/scripts/base16-harmonic-dark.sh" harmonic-dark'
base16_harmonic-light='_base16 "/home/cxcadmin/.config/base16-shell/scripts/base16-harmonic-light.sh" harmonic-light'
base16_heetch='_base16 "/home/cxcadmin/.config/base16-shell/scripts/base16-heetch.sh" heetch'
base16_heetch-light='_base16 "/home/cxcadmin/.config/base16-shell/scripts/base16-heetch-light.sh" heetch-light'
base16_helios='_base16 "/home/cxcadmin/.config/base16-shell/scripts/base16-helios.sh" helios'
base16_hopscotch='_base16 "/home/cxcadmin/.config/base16-shell/scripts/base16-hopscotch.sh" hopscotch'
base16_horizon-dark='_base16 "/home/cxcadmin/.config/base16-shell/scripts/base16-horizon-dark.sh" horizon-dark'
base16_ia-dark='_base16 "/home/cxcadmin/.config/base16-shell/scripts/base16-ia-dark.sh" ia-dark'
base16_ia-light='_base16 "/home/cxcadmin/.config/base16-shell/scripts/base16-ia-light.sh" ia-light'
base16_icy='_base16 "/home/cxcadmin/.config/base16-shell/scripts/base16-icy.sh" icy'
base16_irblack='_base16 "/home/cxcadmin/.config/base16-shell/scripts/base16-irblack.sh" irblack'
base16_isotope='_base16 "/home/cxcadmin/.config/base16-shell/scripts/base16-isotope.sh" isotope'
base16_macintosh='_base16 "/home/cxcadmin/.config/base16-shell/scripts/base16-macintosh.sh" macintosh'
base16_marrakesh='_base16 "/home/cxcadmin/.config/base16-shell/scripts/base16-marrakesh.sh" marrakesh'
base16_materia='_base16 "/home/cxcadmin/.config/base16-shell/scripts/base16-materia.sh" materia'
base16_material='_base16 "/home/cxcadmin/.config/base16-shell/scripts/base16-material.sh" material'
base16_material-darker='_base16 "/home/cxcadmin/.config/base16-shell/scripts/base16-material-darker.sh" material-darker'
base16_material-lighter='_base16 "/home/cxcadmin/.config/base16-shell/scripts/base16-material-lighter.sh" material-lighter'
base16_material-palenight='_base16 "/home/cxcadmin/.config/base16-shell/scripts/base16-material-palenight.sh" material-palenight'
base16_material-vivid='_base16 "/home/cxcadmin/.config/base16-shell/scripts/base16-material-vivid.sh" material-vivid'
base16_mellow-purple='_base16 "/home/cxcadmin/.config/base16-shell/scripts/base16-mellow-purple.sh" mellow-purple'
base16_mexico-light='_base16 "/home/cxcadmin/.config/base16-shell/scripts/base16-mexico-light.sh" mexico-light'
base16_mocha='_base16 "/home/cxcadmin/.config/base16-shell/scripts/base16-mocha.sh" mocha'
base16_monokai='_base16 "/home/cxcadmin/.config/base16-shell/scripts/base16-monokai.sh" monokai'
base16_nord='_base16 "/home/cxcadmin/.config/base16-shell/scripts/base16-nord.sh" nord'
base16_ocean='_base16 "/home/cxcadmin/.config/base16-shell/scripts/base16-ocean.sh" ocean'
base16_oceanicnext='_base16 "/home/cxcadmin/.config/base16-shell/scripts/base16-oceanicnext.sh" oceanicnext'
base16_one-light='_base16 "/home/cxcadmin/.config/base16-shell/scripts/base16-one-light.sh" one-light'
base16_onedark='_base16 "/home/cxcadmin/.config/base16-shell/scripts/base16-onedark.sh" onedark'
base16_outrun-dark='_base16 "/home/cxcadmin/.config/base16-shell/scripts/base16-outrun-dark.sh" outrun-dark'
base16_papercolor-dark='_base16 "/home/cxcadmin/.config/base16-shell/scripts/base16-papercolor-dark.sh" papercolor-dark'
base16_papercolor-light='_base16 "/home/cxcadmin/.config/base16-shell/scripts/base16-papercolor-light.sh" papercolor-light'
base16_paraiso='_base16 "/home/cxcadmin/.config/base16-shell/scripts/base16-paraiso.sh" paraiso'
base16_phd='_base16 "/home/cxcadmin/.config/base16-shell/scripts/base16-phd.sh" phd'
base16_pico='_base16 "/home/cxcadmin/.config/base16-shell/scripts/base16-pico.sh" pico'
base16_pop='_base16 "/home/cxcadmin/.config/base16-shell/scripts/base16-pop.sh" pop'
base16_porple='_base16 "/home/cxcadmin/.config/base16-shell/scripts/base16-porple.sh" porple'
base16_railscasts='_base16 "/home/cxcadmin/.config/base16-shell/scripts/base16-railscasts.sh" railscasts'
base16_rebecca='_base16 "/home/cxcadmin/.config/base16-shell/scripts/base16-rebecca.sh" rebecca'
base16_seti='_base16 "/home/cxcadmin/.config/base16-shell/scripts/base16-seti.sh" seti'
base16_shapeshifter='_base16 "/home/cxcadmin/.config/base16-shell/scripts/base16-shapeshifter.sh" shapeshifter'
base16_snazzy='_base16 "/home/cxcadmin/.config/base16-shell/scripts/base16-snazzy.sh" snazzy'
base16_solarflare='_base16 "/home/cxcadmin/.config/base16-shell/scripts/base16-solarflare.sh" solarflare'
base16_solarized-dark='_base16 "/home/cxcadmin/.config/base16-shell/scripts/base16-solarized-dark.sh" solarized-dark'
base16_solarized-light='_base16 "/home/cxcadmin/.config/base16-shell/scripts/base16-solarized-light.sh" solarized-light'
base16_spacemacs='_base16 "/home/cxcadmin/.config/base16-shell/scripts/base16-spacemacs.sh" spacemacs'
base16_summerfruit-dark='_base16 "/home/cxcadmin/.config/base16-shell/scripts/base16-summerfruit-dark.sh" summerfruit-dark'
base16_summerfruit-light='_base16 "/home/cxcadmin/.config/base16-shell/scripts/base16-summerfruit-light.sh" summerfruit-light'
base16_synth-midnight-dark='_base16 "/home/cxcadmin/.config/base16-shell/scripts/base16-synth-midnight-dark.sh" synth-midnight-dark'
base16_tomorrow='_base16 "/home/cxcadmin/.config/base16-shell/scripts/base16-tomorrow.sh" tomorrow'
base16_tomorrow-night='_base16 "/home/cxcadmin/.config/base16-shell/scripts/base16-tomorrow-night.sh" tomorrow-night'
base16_tomorrow-night-eighties='_base16 "/home/cxcadmin/.config/base16-shell/scripts/base16-tomorrow-night-eighties.sh" tomorrow-night-eighties'
base16_tube='_base16 "/home/cxcadmin/.config/base16-shell/scripts/base16-tube.sh" tube'
base16_twilight='_base16 "/home/cxcadmin/.config/base16-shell/scripts/base16-twilight.sh" twilight'
base16_unikitty-dark='_base16 "/home/cxcadmin/.config/base16-shell/scripts/base16-unikitty-dark.sh" unikitty-dark'
base16_unikitty-light='_base16 "/home/cxcadmin/.config/base16-shell/scripts/base16-unikitty-light.sh" unikitty-light'
base16_woodland='_base16 "/home/cxcadmin/.config/base16-shell/scripts/base16-woodland.sh" woodland'
base16_xcode-dusk='_base16 "/home/cxcadmin/.config/base16-shell/scripts/base16-xcode-dusk.sh" xcode-dusk'
base16_zenburn='_base16 "/home/cxcadmin/.config/base16-shell/scripts/base16-zenburn.sh" zenburn'
bfe='cd ~FRONTEND; npm install'
cdb='cd /opt/cisco/iris/backend'
cdc='/opt/cisco/iris/deploy/install.sh change-docker-creds'
cdd='cd /opt/cisco/iris/deploy'
cdf='cd /opt/cisco/iris/frontend'
cdh='cd /opt/cisco/iris/deploy/salt/files/install/tracelogger/charts'
cpi='/opt/cisco/iris/deploy/install.sh central-pre-install-dev'
cpip='/opt/cisco/iris/deploy/install.sh central-pre-install'
cpipo='/opt/cisco/iris/deploy/install.sh central-pre-install-offline'
dbg='kubectl exec $(kubectl get pod -l label=iris-redis-master -o jsonpath="{.items[0].metadata.name}") -- redis-cli -a $(kubectl get secret iris-install-secrets -o jsonpath={.data.redis-secret-key} | base64 --decode) set log_level:collection DEBUG'
dbge='kubectl exec $(kubectl get pod -l label=iris-redis-master -o jsonpath="{.items[0].metadata.name}") -- redis-cli -a $(kubectl get secret iris-install-secrets -o jsonpath={.data.redis-secret-key} | base64 --decode) set log_level:nodes DEBUG'
dcl='docker rm $(docker ps -aq); docker rmi --force $(docker images -q)'
del='/opt/cisco/iris/deploy/install.sh delete'
dep='kubectl get pods --field-selector=status.phase=Failed -o jsonpath="{.items[*].metadata.name}" | xargs kubectl delete pod'
dif='diff -r /opt/cisco/iris/deploy/salt/files/helm /etc/iris/helm'
diff='diff --color'
drq='kubectl exec $(kubectl get pod -l label=iris-redis-master -o jsonpath="{.items[0].metadata.name}") -- redis-cli -a $(kubectl get secret iris-install-secrets -o jsonpath={.data.redis-secret-key}  | base64 --decode) del ringqueueProcessedList'
dry='helm install --debug --dry-run'
egrep='egrep --color=auto --exclude-dir={.bzr,CVS,.git,.hg,.svn,.idea,.tox}'
epi='/opt/cisco/iris/deploy/install.sh edge-pre-install-dev'
epip='/opt/cisco/iris/deploy/install.sh edge-pre-install'
epipo='/opt/cisco/iris/deploy/install.sh edge-pre-install-offline'
eschk='curl -XGET "http://$(kubectl get service iris-central-elasticsearch-client -o jsonpath={.spec.clusterIP}):9200/_cluster/health?pretty=true"'
fgrep='fgrep --color=auto --exclude-dir={.bzr,CVS,.git,.hg,.svn,.idea,.tox}'
g=git
ga='git add'
gaa='git add --all'
gam='git am'
gama='git am --abort'
gamc='git am --continue'
gams='git am --skip'
gamscp='git am --show-current-patch'
gap='git apply'
gapa='git add --patch'
gapt='git apply --3way'
gau='git add --update'
gav='git add --verbose'
gb='git branch'
gbD='git branch -D'
gba='git branch -a'
gbd='git branch -d'
gbda='git branch --no-color --merged | command grep -vE "^(\+|\*|\s*($(git_main_branch)|development|develop|devel|dev)\s*$)" | command xargs -n 1 git branch -d'
gbl='git blame -b -w'
gbnm='git branch --no-merged'
gbr='git branch --remote'
gbs='git bisect'
gbsb='git bisect bad'
gbsg='git bisect good'
gbsr='git bisect reset'
gbss='git bisect start'
gc='git commit -v'
'gc!'='git commit -v --amend'
gca='git commit -v -a'
'gca!'='git commit -v -a --amend'
gcam='git commit -a -m'
'gcan!'='git commit -v -a --no-edit --amend'
'gcans!'='git commit -v -a -s --no-edit --amend'
gcb='git checkout -b'
gcd='git checkout develop'
gcf='git config --list'
gcl='git clone --recurse-submodules'
gclean='git clean -id'
gcm='git checkout $(git_main_branch)'
gcmsg='git commit -m'
'gcn!'='git commit -v --no-edit --amend'
gco='git checkout'
gcount='git shortlog -sn'
gcp='git cherry-pick'
gcpa='git cherry-pick --abort'
gcpc='git cherry-pick --continue'
gcs='git commit -S'
gcsm='git commit -s -m'
gd='git diff'
gdca='git diff --cached'
gdct='git describe --tags $(git rev-list --tags --max-count=1)'
gdcw='git diff --cached --word-diff'
gdn='kubectl get configmap iris-pre-install -o jsonpath={.data.deploy-name}'
gds='git diff --staged'
gdt='git diff-tree --no-commit-id --name-only -r'
gdw='git diff --word-diff'
gf='git fetch'
gfa='git fetch --all --prune --jobs=10'
gfg='git ls-files | grep'
gfo='git fetch origin'
gg='git gui citool'
gga='git gui citool --amend'
ggpull='git pull origin "$(git_current_branch)"'
ggpur=ggu
ggpush='git push origin "$(git_current_branch)"'
ggsup='git branch --set-upstream-to=origin/$(git_current_branch)'
ghh='git help'
gignore='git update-index --assume-unchanged'
gignored='git ls-files -v | grep "^[[:lower:]]"'
git-svn-dcommit-push='git svn dcommit && git push github $(git_main_branch):svntrunk'
gk='\gitk --all --branches'
gke='\gitk --all $(git log -g --pretty=%h)'
gl='git pull'
glg='git log --stat'
glgg='git log --graph'
glgga='git log --graph --decorate --all'
glgm='git log --graph --max-count=10'
glgp='git log --stat -p'
gll='kubectl exec $(kubectl get pod -l label=iris-logstash -o "jsonpath={.items[0].metadata.name}") -- curl -XGET "localhost:9600/_node/logging?pretty"'
glo='git log --oneline --decorate'
globurl='noglob urlglobber '
glod='git log --graph --pretty='\''%Cred%h%Creset -%C(auto)%d%Creset %s %Cgreen(%ad) %C(bold blue)<%an>%Creset'\'
glods='git log --graph --pretty='\''%Cred%h%Creset -%C(auto)%d%Creset %s %Cgreen(%ad) %C(bold blue)<%an>%Creset'\'' --date=short'
glog='git log --oneline --decorate --graph'
gloga='git log --oneline --decorate --graph --all'
glol='git log --graph --pretty='\''%Cred%h%Creset -%C(auto)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset'\'
glola='git log --graph --pretty='\''%Cred%h%Creset -%C(auto)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset'\'' --all'
glols='git log --graph --pretty='\''%Cred%h%Creset -%C(auto)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset'\'' --stat'
glp=_git_log_prettily
glum='git pull upstream $(git_main_branch)'
gm='git merge'
gma='git merge --abort'
gmom='git merge origin/$(git_main_branch)'
gmt='git mergetool --no-prompt'
gmtvim='git mergetool --no-prompt --tool=vimdiff'
gmum='git merge upstream/$(git_main_branch)'
gp='git push'
gpd='git push --dry-run'
gpf='git push --force-with-lease'
'gpf!'='git push --force'
gpoat='git push origin --all && git push origin --tags'
gpristine='git reset --hard && git clean -dffx'
gpsup='git push --set-upstream origin $(git_current_branch)'
gpu='git push upstream'
gpv='git push -v'
gr='git remote'
gra='git remote add'
grb='git rebase'
grba='git rebase --abort'
grbc='git rebase --continue'
grbd='git rebase develop'
grbi='git rebase -i'
grbm='git rebase $(git_main_branch)'
grbs='git rebase --skip'
grep='grep --color=auto --exclude-dir={.bzr,CVS,.git,.hg,.svn,.idea,.tox}'
grev='git revert'
grh='git reset'
grhh='git reset --hard'
grm='git rm'
grmc='git rm --cached'
grmv='git remote rename'
groh='git reset origin/$(git_current_branch) --hard'
grrm='git remote remove'
grs='git restore'
grset='git remote set-url'
grss='git restore --source'
grst='git restore --staged'
grt='cd "$(git rev-parse --show-toplevel || echo .)"'
gru='git reset --'
grup='git remote update'
grv='git remote -v'
gsb='git status -sb'
gsd='git svn dcommit'
gsh='git show'
gsi='git submodule init'
gsps='git show --pretty=short --show-signature'
gsr='git svn rebase'
gss='git status -s'
gst='git status'
gsta='git stash push'
gstaa='git stash apply'
gstall='git stash --all'
gstc='git stash clear'
gstd='git stash drop'
gstl='git stash list'
gstp='git stash pop'
gsts='git stash show --text'
gstu='git stash --include-untracked'
gsu='git submodule update'
gsw='git switch'
gswc='git switch -c'
gtl='gtl(){ git tag --sort=-v:refname -n -l "${1}*" }; noglob gtl'
gts='git tag -s'
gtv='git tag | sort -V'
gunignore='git update-index --no-assume-unchanged'
gunwip='git log -n 1 | grep -q -c "\-\-wip\-\-" && git reset HEAD~1'
gup='git pull --rebase'
gupa='git pull --rebase --autostash'
gupav='git pull --rebase --autostash -v'
gupv='git pull --rebase -v'
gwch='git whatchanged -p --abbrev-commit --pretty=medium'
gwip='git add -A; git rm $(git ls-files --deleted) 2> /dev/null; git commit --no-verify --no-gpg-sign -m "--wip-- [skip ci]"'
h=history
hdp='helm delete --purge'
hgm='helm get manifest'
history='omz_history -i'
hl='helm list --all'
ins='/opt/cisco/iris/deploy/install.sh install'
ipython='python -c '\''import IPython; IPython.terminal.ipapp.launch_new_instance()'\'
k=kubectl
kaf='kubectl apply -f'
kca='_kca(){ kubectl "$@" --all-namespaces;  unset -f _kca; }; _kca'
kccc='kubectl config current-context'
kcdc='kubectl config delete-context'
kcgc='kubectl config get-contexts'
kcn='kubectl config set-context $(kubectl config current-context) --namespace'
kcp='kubectl cp'
kcsc='kubectl config set-context'
kcuc='kubectl config use-context'
kdcj='kubectl describe cronjob'
kdcm='kubectl describe configmap'
kdd='kubectl describe deployment'
kdds='kubectl describe daemonset'
kdel='kubectl delete'
kdelcj='kubectl delete cronjob'
kdelcm='kubectl delete configmap'
kdeld='kubectl delete deployment'
kdelds='kubectl delete daemonset'
kdelf='kubectl delete -f'
kdeli='kubectl delete ingress'
kdelno='kubectl delete node'
kdelns='kubectl delete namespace'
kdelp='kubectl delete pods'
kdelpvc='kubectl delete pvc'
kdels='kubectl delete svc'
kdelsa='kubectl delete sa'
kdelsec='kubectl delete secret'
kdelss='kubectl delete statefulset'
kdi='kubectl describe ingress'
kdj='kubectl describe job'
kdn='kubectl describe node'
kdno='kubectl describe node'
kdns='kubectl describe namespace'
kdp='kubectl describe pods'
kdps='kubectl describe pods -n kube-system'
kdpvc='kubectl describe pvc'
kds='kubectl describe service'
kdsa='kubectl describe sa'
kdsec='kubectl describe secret'
kdss='kubectl describe statefulset'
kecj='kubectl edit cronjob'
kecm='kubectl edit configmap'
ked='kubectl edit deployment'
keds='kubectl edit daemonset'
kei='kubectl edit ingress'
keno='kubectl edit node'
kens='kubectl edit namespace'
kep='kubectl edit pods'
kepvc='kubectl edit pvc'
keti='kubectl exec -ti'
kga='kubectl get all -o wide'
kgaa='kubectl get all --all-namespaces'
kgas='kubectl get all -o wide -n kube-system'
kgcj='kubectl get cronjob'
kgcm='kubectl get cm'
kgcma='kubectl get configmaps --all-namespaces'
kgcms='kubectl get cm -n kube-system'
kgcr='kubectl get clusterroles'
kgcrb='kubectl get clusterrolebindings -o wide'
kgcrs='kubectl get clusterroles -n kube-system'
kgd='kubectl get deployment -o wide'
kgda='kubectl get deployment --all-namespaces'
kgds='kubectl get deployment -o wide -n kube-system'
kgdsw='kgds --watch'
kgdw='kgd --watch'
kgdwide='kgd -o wide'
kge='kubectl get events --sort-by={.lastTimestamp}'
kges='kubectl get events -n kube-system'
kgew='kubectl get events --sort-by={.lastTimestamp} | grep Warn'
kgi='kubectl api-resources --verbs=list --namespaced -o name | grep -v events | xargs -n 1 kubectl get --show-kind --ignore-not-found | grep iris'
kgia='kubectl get ingress --all-namespaces'
kgj='kubectl get job'
kgno='kubectl get nodes'
kgns='kubectl get namespaces'
kgp='kubectl get pods -o wide'
kgpa='kubectl get pods --all-namespaces'
kgpl='kgp -l'
kgpn='kgp -n'
kgps='kubectl get pods -o wide -n kube-system'
kgpv='kubectl get pv -o wide'
kgpvc='kubectl get pvc -o wide'
kgpvca='kubectl get pvc --all-namespaces'
kgpvcs='kubectl get pvc -o wide -n kube-system'
kgpvcw='kgpvc --watch'
kgpvs='kubectl get pv -o wide -n kube-system'
kgpw='kgp --watch'
kgpwide='kgp -o wide'
kgr='kubectl get roles'
kgrb='kubectl get rolebindings -o wide'
kgrbs='kubectl get rolebindings -o wide -n kube-system'
kgrs='kubectl get roles -n kube-system'
kgs='kubectl get service'
kgsa='kubectl get sa'
kgsas='kubectl get sa -n kube-system'
kgsec='kubectl get secret'
kgseca='kubectl get secret --all-namespaces'
kgsecs='kubectl get secret -n kube-system'
kgsf='kubectl get statefulset -o wide'
kgsfs='kubectl get statefulset -o wide -n kube-system'
kgss='kubectl get service -n kube-system'
kgssa='kubectl get statefulset --all-namespaces'
kgssw='kgss --watch'
kgsswide='kgss -o wide'
kgsw='kubectl get service -o wide'
kgswide='kgs -o wide'
kgsws='kubectl get service -o wide -n kube-system'
kl='kubectl logs'
kl1h='kubectl logs --since 1h'
kl1m='kubectl logs --since 1m'
kl1s='kubectl logs --since 1s'
klf='kubectl logs -f'
klf1h='kubectl logs --since 1h -f'
klf1m='kubectl logs --since 1m -f'
klf1s='kubectl logs --since 1s -f'
kls='kubectl logs -n kube-system'
kpf='kubectl port-forward'
kpg='kubectl exec $(kubectl get pod -l label=iris-central-postgresql -o "jsonpath={.items[0].metadata.name}") -- psql -U iris -c'
krga='kubectl api-resources --verbs=list --namespaced -o name | xargs -n 1 kubectl get --show-kind --ignore-not-found'
krh='kubectl rollout history'
krsd='kubectl rollout status deployment'
krsss='kubectl rollout status statefulset'
kru='kubectl rollout undo'
ksd='kubectl scale deployment'
ksss='kubectl scale statefulset'
ktp='kubectl top pod --all-namespaces'
kxd='kubectl delete deployment'
kxj='kubectl delete job'
kxp='kubectl delete pods'
kxpf='kubectl delete pods --force --grace-period=0'
kxpv='kubectl delete pv'
kxpvc='kubectl delete pvc'
kxs='kubectl delete service'
kxss='kubectl delete statefulset'
l='ls -lah'
la='ls -lAh'
ldev='/opt/cisco/iris/deploy/install.sh local-dev'
lir='redis-cli -h $TL_REDIS_HOST -a $TL_REDIS_PASSWORD'
ll='ls -lh'
ls='ls --color=tty'
lsa='ls -lah'
md='mkdir -p'
mll='kubectl exec $(kubectl get pod -l label=iris-logstash -o "jsonpath={.items[0].metadata.name}") -- curl -XPUT "localhost:9600/_node/logging?pretty" -H "Content-Type: application/json" -d'
omz-conf='vim ~/.oh-my-zsh'
pgs='activate-env;cd ~BACKEND;./manage.py dbshell'
pi='/opt/cisco/iris/deploy/install.sh post-install'
pid='/opt/cisco/iris/deploy/install.sh post-install-dev'
pyfind='find . -name "*.py"'
pygrep='grep -nr --include="*.py"'
rd=rmdir
reloadpost='pg_ctl reload -D /usr/local/var/postgres -s'
restartpost='stoppost && sleep 1 && startpost'
rmd='sudo rm -rf /data/* /home/cxcadmin-sftp /var/log/iris'
rmid='sudo rm -rf /data/iris/processed/* /data/iris/unprocessed/*'
rmt='kubectl get pod | egrep '\''iris-collector|iris-discovery'\'' | awk '\''{ print $1 }'\'' | xargs -r kubectl delete pod'
sbe='cd ~BACKEND; activate-env; ./manage.py runsslserver 0.0.0.0:8081'
sc1='cd ~BACKEND; activate-env; celery beat -A core.celery -l debug'
sc2='cd ~BACKEND; activate-env; export TL_SKIP_NODE_COUNTER_CHECK=1; celery worker -A core.celery -Q default -O fair -l debug'
sc3='cd ~BACKEND; activate-env; celery worker -A core.celery -Q collector -O fair -l debug'
sfe='cd ~FRONTEND; npm run serve'
shopt=:
sls='cd ~BACKEND; activate-env; ./manage.py process_trace_files'
smnt='cd ~BACKEND; activate-env;  export TL_DEBUG=1; ./manage.py maintenance'
snm='cd ~BACKEND; activate-env;  export TL_DEBUG=1; ./manage.py node_manager'
snmx='cd ~BACKEND; activate-env; export TL_DEBUG=1; ./manage.py node_multiplexer'
startpost='pg_ctl -D /usr/local/var/postgres -l /usr/local/var/postgres/server.log start'
statuspost='pg_ctl status -D /usr/local/var/postgres -s'
stoppost='pg_ctl -D /usr/local/var/postgres stop -s -m fast'
uia='cp /opt/cisco/iris/deploy/salt/files/zsh/iris_aliases.zsh $HOME/.zshrc.d; source $HOME/.zshrc.d/iris_aliases.zsh'
vim-conf='vim ~/.vimrc'
wfp='watch -n 2 kubectl get pods'
wfps='watch -n 2 kubectl get pods -n kube-system'
which-command=whence
zsh-conf='vim ~/.zshrc'